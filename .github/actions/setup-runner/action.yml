name: Setup runner
description: Prepare a runner for the tests (install uv, python, project dependencies, etc.)
inputs:
  python-version:
    description: The Python version to use
    required: false
    default: "3.12"
  client-version:
    description: The llama-stack-client-python version to test against (latest or published)
    required: false
    default: "latest"
runs:
  using: "composite"
  steps:
    - name: Install uv
      uses: astral-sh/setup-uv@6b9c6063abd6010835644d4c2e1bef4cf5cd0fca # v6.0.1
      with:
        python-version: ${{ inputs.python-version }}
        version: 0.7.6

    - name: Pre-install client for release branches
      uses: ./.github/actions/install-client-for-release

    - name: Install dependencies
      shell: bash
      run: |
        # Determine the branch we're working with (needed for post-install logic)
        BRANCH="${{ github.base_ref || github.ref }}"
        BRANCH="${BRANCH#refs/heads/}"

        echo "Updating project dependencies via uv sync"
        uv sync --all-groups

        echo "Installing ad-hoc dependencies"
        uv pip install faiss-cpu

        # Install llama-stack-client-python based on the client-version input
        # Only applies to non-release branches (on release branches, we already installed from git above)
        if [[ ! "$BRANCH" =~ ^release-[0-9]+\.[0-9]+\.x$ ]]; then
          if [ "${{ inputs.client-version }}" = "latest" ]; then
            echo "Installing latest llama-stack-client-python from main branch"
            uv pip install git+https://github.com/llamastack/llama-stack-client-python.git@main
          elif [ "${{ inputs.client-version }}" = "published" ]; then
            echo "Installing published llama-stack-client-python from PyPI"
            uv pip install llama-stack-client
          else
            echo "Invalid client-version: ${{ inputs.client-version }}"
            exit 1
          fi
        fi

        echo "Installed llama packages"
        uv pip list | grep llama
